// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: configuration.sql

package db

import (
	"context"
)

const getConfiguration = `-- name: GetConfiguration :one
SELECT config_name, config_value, created_at, updated_at
FROM configurations
WHERE config_name=$1
LIMIT 1
`

func (q *Queries) GetConfiguration(ctx context.Context, configName string) (Configuration, error) {
	row := q.db.QueryRow(ctx, getConfiguration, configName)
	var i Configuration
	err := row.Scan(
		&i.ConfigName,
		&i.ConfigValue,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const updateConfiguration = `-- name: UpdateConfiguration :exec
UPDATE configurations
SET config_value=$2,updated_at=now()
WHERE config_name=$1
`

type UpdateConfigurationParams struct {
	ConfigName  string `json:"config_name"`
	ConfigValue bool   `json:"config_value"`
}

func (q *Queries) UpdateConfiguration(ctx context.Context, arg UpdateConfigurationParams) error {
	_, err := q.db.Exec(ctx, updateConfiguration, arg.ConfigName, arg.ConfigValue)
	return err
}
